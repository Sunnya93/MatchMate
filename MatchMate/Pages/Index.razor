@page "/"
@inject MatchService _Service

@if (Matches is null || Matches.Count == 0)
{
    <section class="d-flex vh-100 justify-content-center align-items-center">
        <MudButton Variant="Variant.Filled" Href="match" EndIcon="@Icons.Material.Filled.GroupAdd" Style="background-color: yellowgreen; color: white; width: 300px; height: 300px;">
            구역 배정하기
        </MudButton>
    </section>
}
else
{
    <MudCarousel TData="object" Class="mud-width-full" Style="height:600px;">
        @foreach (Matched matched in Matches)
        {
            <MudCarouselItem>
                <MatchedCard Place="@matched.Place" MatchedTeam="@matched.MatchedPerson" />
            </MudCarouselItem>
        }

    </MudCarousel>

    <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Send" Color="Color.Primary" OnClick="Send">문자보내기</MudButton>

}


@code {

    private List<Matched> Matches;

    protected override void OnInitialized()
    {
        Matches = _Service.Matcheds;
    }

    private async Task Send()
    {
        if (Sms.Default.IsComposeSupported)
        {
            Tuple<string, List<People>> _messageService = _Service.SetMeesageAndContact();
            var message = new SmsMessage(_messageService.Item1, _messageService.Item2.Select(i => i.PhoneNumber).ToList());

            await Sms.Default.ComposeAsync(message);
        }
    }

}